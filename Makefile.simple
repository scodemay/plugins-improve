# 简化的构建和部署 Makefile

.PHONY: all build build-image deploy test clean

# 默认目标
all: build build-image deploy

# 构建调度器二进制
build:
	@echo "📦 构建调度器二进制文件..."
	make build-scheduler

# 构建Docker镜像
build-image:
	@echo "🐳 构建Docker镜像..."
	docker build -f Dockerfile.local -t scheduler-plugins:latest .

# 加载镜像到Kind集群 (如果使用Kind)
load-image:
	@echo "📥 加载镜像到Kind集群..."
	@if command -v kind >/dev/null 2>&1; then \
		kind load docker-image scheduler-plugins:latest || echo "⚠️  请确认Kind集群名称"; \
	else \
		echo "ℹ️  跳过Kind镜像加载 (未检测到Kind)"; \
	fi

# 部署重调度器
deploy:
	@echo "🚀 部署重调度器到Kubernetes..."
	kubectl apply -f manifests/rescheduler/deployment.yaml

# 快速测试
test:
	@echo "🧪 部署测试Pod..."
	kubectl apply -f manifests/rescheduler/quick-test.yaml
	@echo ""
	@echo "📊 查看初始Pod分布:"
	kubectl get pods --all-namespaces -o wide | awk '{print $$8}' | sort | uniq -c
	@echo ""
	@echo "👀 监控重调度日志:"
	@echo "kubectl logs -n kube-system -l app=rescheduler-scheduler -f"

# 查看状态
status:
	@echo "📈 重调度器状态:"
	kubectl get pods -n kube-system -l app=rescheduler-scheduler
	@echo ""
	@echo "📊 当前Pod分布:"
	kubectl get pods --all-namespaces -o wide | awk '{print $$8}' | sort | uniq -c

# 清理测试资源
clean-test:
	@echo "🧹 清理测试资源..."
	kubectl delete deployment load-imbalance-test --ignore-not-found
	kubectl delete pod resource-heavy-pod --ignore-not-found
	kubectl delete configmap test-commands --ignore-not-found

# 完全清理
clean:
	@echo "🧹 清理重调度器和测试资源..."
	kubectl delete -f manifests/rescheduler/deployment.yaml --ignore-not-found
	kubectl delete -f manifests/rescheduler/quick-test.yaml --ignore-not-found
	@echo "✅ 清理完成"

# 显示有用的命令
help:
	@echo "🚀 重调度器项目 - 可用命令:"
	@echo ""
	@echo "构建和部署:"
	@echo "  make build        - 构建调度器二进制"
	@echo "  make build-image  - 构建Docker镜像"  
	@echo "  make load-image   - 加载镜像到Kind集群"
	@echo "  make deploy       - 部署重调度器"
	@echo ""
	@echo "测试和监控:"
	@echo "  make test         - 部署测试Pod"
	@echo "  make status       - 查看状态"
	@echo ""
	@echo "清理:"
	@echo "  make clean-test   - 清理测试资源"
	@echo "  make clean        - 完全清理"
	@echo ""
	@echo "一键操作:"
	@echo "  make all          - 构建+镜像+部署"
