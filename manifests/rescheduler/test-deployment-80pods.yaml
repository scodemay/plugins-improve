# 80个Pod的Deployment配置 - 用于测试重调度功能
# 将所有Pod强制调度到同一个节点以观察重调度行为

apiVersion: apps/v1
kind: Deployment
metadata:
  name: rescheduler-test-deployment
  namespace: default
  labels:
    app: rescheduler-test
    test-type: load-balancing
spec:
  replicas: 80  # 部署80个Pod副本
  selector:
    matchLabels:
      app: rescheduler-test
  template:
    metadata:
      labels:
        app: rescheduler-test
        priority: normal
        test-type: load-balancing
    spec:
      schedulerName: rescheduler-scheduler  # 使用重调度器
      priorityClassName: normal-priority    # 设置优先级类
      # 强制调度到rebalancer-worker节点
      
      containers:
      - name: nginx
        image: nginx:latest
        resources:
          requests:
            cpu: 250m        # 每个Pod请求50m CPU
            memory: 128Mi    # 每个Pod请求64Mi内存
          limits:
            cpu: 400m       # 每个Pod限制100m CPU  
            memory: 256Mi   # 每个Pod限制128Mi内存
        ports:
        - containerPort: 80
        # 添加简单的健康检查
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
      # 允许Pod被重调度（不设置排除标签）
      restartPolicy: Always
      # Pod反亲和性配置，允许多个Pod调度到同一节点
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 10
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - rescheduler-test
              topologyKey: kubernetes.io/hostname
