# 🔧 重调度器配置示例集合 - 更新版本
# 匹配重构后的代码参数

---
# ============================================================================
# 📋 示例1：生产环境保守配置
# 适用于：生产环境、稳定性优先的场景
# ============================================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: rescheduler-config-production
  namespace: kube-system
  labels:
    app: rescheduler-scheduler
    env: production
    config-type: conservative
data:
  config.yaml: |
    apiVersion: kubescheduler.config.k8s.io/v1
    kind: KubeSchedulerConfiguration
    
    leaderElection:
      leaderElect: true
      leaseDuration: 30s        # 增加租约时间提高稳定性
      renewDeadline: 20s
      retryPeriod: 5s
    
    profiles:
      - schedulerName: rescheduler-scheduler
        plugins:
          filter:
            enabled: [name: Rescheduler]
          score:
            enabled: [name: Rescheduler]
          # 生产环境可以关闭PreBind以减少复杂性
          # preBind:
          #   enabled: [name: Rescheduler]
        
        pluginConfig:
        - name: Rescheduler
          args:
            # 保守的重调度配置
            reschedulingInterval: "120s"            # 2分钟检查间隔
            cpuThreshold: 95.0                      # 高阈值减少误触发
            memoryThreshold: 95.0
            
            # 排除关键命名空间
            excludedNamespaces:
              - "kube-system"
              - "kube-public"
              - "kube-node-lease"
              - "istio-system"      # 服务网格
              - "monitoring"        # 监控系统
              - "logging"           # 日志系统
              - "backup"            # 备份系统
            
            # 保守的调度优化
            enableSchedulingOptimization: true
            enablePreventiveRescheduling: false     # 关闭预防性重调度
            cpuScoreWeight: 0.8                     # 更重视CPU
            memoryScoreWeight: 0.2
            loadBalanceBonus: 3.0                   # 小幅奖励

---
# ============================================================================
# 📋 示例2：开发/测试环境激进配置
# 适用于：开发测试、快速响应的场景
# ============================================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: rescheduler-config-development
  namespace: kube-system
  labels:
    app: rescheduler-scheduler
    env: development
    config-type: aggressive
data:
  config.yaml: |
    apiVersion: kubescheduler.config.k8s.io/v1
    kind: KubeSchedulerConfiguration
    
    leaderElection:
      leaderElect: false      # 开发环境关闭领导者选举
    
    profiles:
      - schedulerName: rescheduler-scheduler
        plugins:
          filter:
            enabled: [name: Rescheduler]
          score:
            enabled: [name: Rescheduler]
          reserve:
            enabled: [name: Rescheduler]
          preBind:
            enabled: [name: Rescheduler]
        
        pluginConfig:
        - name: Rescheduler
          args:
            # 激进的重调度配置
            reschedulingInterval: "15s"             # 高频检查
            cpuThreshold: 50.0                      # 低阈值
            memoryThreshold: 50.0
            
            excludedNamespaces:
              - "kube-system"
            
            # 全功能调度优化
            enableSchedulingOptimization: true
            enablePreventiveRescheduling: true
            cpuScoreWeight: 0.6
            memoryScoreWeight: 0.4
            loadBalanceBonus: 20.0                  # 高奖励促进负载均衡

---
# ============================================================================
# 📋 示例3：CPU密集型工作负载配置
# 适用于：计算密集型应用、CPU资源紧张的场景
# ============================================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: rescheduler-config-cpu-intensive
  namespace: kube-system
  labels:
    app: rescheduler-scheduler
    workload-type: cpu-intensive
data:
  config.yaml: |
    apiVersion: kubescheduler.config.k8s.io/v1
    kind: KubeSchedulerConfiguration
    
    profiles:
      - schedulerName: rescheduler-scheduler
        plugins:
          filter:
            enabled: [name: Rescheduler]
          score:
            enabled: [name: Rescheduler]
          reserve:
            enabled: [name: Rescheduler]
        
        pluginConfig:
        - name: Rescheduler
          args:
            reschedulingInterval: "60s"
            cpuThreshold: 85.0                      # CPU重要，阈值稍低
            memoryThreshold: 90.0                   # 内存次要，阈值较高
            
            excludedNamespaces:
              - "kube-system"
              - "gpu-operator"        # 排除GPU操作系统
            
            # CPU优先的权重配置
            enableSchedulingOptimization: true
            enablePreventiveRescheduling: true
            cpuScoreWeight: 0.8                     # 高CPU权重
            memoryScoreWeight: 0.2                  # 低内存权重
            loadBalanceBonus: 12.0

---
# ============================================================================
# 📋 示例4：内存密集型工作负载配置
# 适用于：内存密集型应用、大数据处理场景
# ============================================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: rescheduler-config-memory-intensive
  namespace: kube-system
  labels:
    app: rescheduler-scheduler
    workload-type: memory-intensive
data:
  config.yaml: |
    apiVersion: kubescheduler.config.k8s.io/v1
    kind: KubeSchedulerConfiguration
    
    profiles:
      - schedulerName: rescheduler-scheduler
        plugins:
          filter:
            enabled: [name: Rescheduler]
          score:
            enabled: [name: Rescheduler]
          preBind:
            enabled: [name: Rescheduler]
        
        pluginConfig:
        - name: Rescheduler
          args:
            reschedulingInterval: "45s"
            cpuThreshold: 90.0                      # CPU次要，阈值较高
            memoryThreshold: 75.0                   # 内存重要，阈值较低
            
            excludedNamespaces:
              - "kube-system"
              - "database"            # 保护数据库Pod
              - "cache"               # 保护缓存Pod
            
            # 内存优先的权重配置
            enableSchedulingOptimization: true
            enablePreventiveRescheduling: true
            cpuScoreWeight: 0.3                     # 低CPU权重
            memoryScoreWeight: 0.7                  # 高内存权重
            loadBalanceBonus: 8.0

---
# ============================================================================
# 📋 示例5：微服务架构配置
# 适用于：大量小服务、容器密度高的场景
# ============================================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: rescheduler-config-microservices
  namespace: kube-system
  labels:
    app: rescheduler-scheduler
    architecture: microservices
data:
  config.yaml: |
    apiVersion: kubescheduler.config.k8s.io/v1
    kind: KubeSchedulerConfiguration
    
    profiles:
      - schedulerName: rescheduler-scheduler
        plugins:
          filter:
            enabled: [name: Rescheduler]
          score:
            enabled: [name: Rescheduler]
          reserve:
            enabled: [name: Rescheduler]
          preBind:
            enabled: [name: Rescheduler]
        
        pluginConfig:
        - name: Rescheduler
          args:
            reschedulingInterval: "30s"             # 中等频率
            cpuThreshold: 80.0                      # 标准阈值
            memoryThreshold: 80.0
            
            excludedNamespaces:
              - "kube-system"
              - "istio-system"        # 服务网格
              - "ingress-nginx"       # 入口控制器
            
            # 均衡的权重配置
            enableSchedulingOptimization: true
            enablePreventiveRescheduling: true
            cpuScoreWeight: 0.6                     # 均衡权重
            memoryScoreWeight: 0.4
            loadBalanceBonus: 15.0                  # 高奖励促进分散

---
# ============================================================================
# 📋 示例6：仅调度优化配置（关闭重调度控制器）
# 适用于：只想要调度优化，不需要主动重调度的场景
# ============================================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: rescheduler-config-schedule-only
  namespace: kube-system
  labels:
    app: rescheduler-scheduler
    mode: schedule-only
data:
  config.yaml: |
    apiVersion: kubescheduler.config.k8s.io/v1
    kind: KubeSchedulerConfiguration
    
    profiles:
      - schedulerName: rescheduler-scheduler
        plugins:
          filter:
            enabled: [name: Rescheduler]
          score:
            enabled: [name: Rescheduler]
          # 可选：启用预留机制
          reserve:
            enabled: [name: Rescheduler]
        
        pluginConfig:
        - name: Rescheduler
          args:
            cpuThreshold: 85.0
            memoryThreshold: 85.0
            
            excludedNamespaces:
              - "kube-system"
            
            # 仅启用调度优化
            enableSchedulingOptimization: true
            enablePreventiveRescheduling: false
            enableReschedulingController: false     # 关闭重调度控制器
            cpuScoreWeight: 0.6
            memoryScoreWeight: 0.4
            loadBalanceBonus: 10.0

---
# ============================================================================
# 📋 示例7：调试配置
# 适用于：问题排查、详细日志的场景
# ============================================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: rescheduler-config-debug
  namespace: kube-system
  labels:
    app: rescheduler-scheduler
    mode: debug
data:
  config.yaml: |
    apiVersion: kubescheduler.config.k8s.io/v1
    kind: KubeSchedulerConfiguration
    
    # 调试模式客户端配置
    clientConnection:
      qps: 20               # 降低QPS便于观察
      burst: 40
    
    profiles:
      - schedulerName: rescheduler-scheduler
        plugins:
          filter:
            enabled: [name: Rescheduler]
          score:
            enabled: [name: Rescheduler]
          reserve:
            enabled: [name: Rescheduler]
          preBind:
            enabled: [name: Rescheduler]
        
        pluginConfig:
        - name: Rescheduler
          args:
            # 调试友好的配置
            reschedulingInterval: "60s"             # 较慢的检查间隔便于观察
            cpuThreshold: 70.0                      # 较低阈值便于触发
            memoryThreshold: 70.0
            
            excludedNamespaces:
              - "kube-system"
            
            # 全功能启用便于测试
            enableSchedulingOptimization: true
            enablePreventiveRescheduling: true
            enableReschedulingController: true
            cpuScoreWeight: 0.6
            memoryScoreWeight: 0.4
            loadBalanceBonus: 10.0
